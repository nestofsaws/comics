{"ts":1366859116747,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# An example web information service\n\nThis is an example application intended to be used as a starting point for the final project in [INLS 490-186 Web Information Organization](http://aeshin.org/teaching/inls-490-186/2013/sp/).\n\n## Forking this repository\n\nYou will want to start by [forking](http://help.github.com/fork-a-repo/) this repository so you have your own copy to modify. If you decide to work in a group, I will put a copy of the code in your shared repository. (While it's possible to collaborate with your group by pushing and pulling commits across your two or three separate forks, doing so requires somewhat advanced knowledge of Git and thus isn't expected for this assignment.)\n\nIf you're working alone, please **rename your GitHub repository** to something more suitable for your service. You can do this by clicking on the `Settings` button in the top right of your repository's page on GitHub. A one-word, no-spaces name is best. (If you're working in a group the repository will be named after your group).\n\n## Cloning your project in Cloud9\n\nIf you're working alone, and you've successfully forked the repository to your own GitHub account, then cloning your project into Cloud9 is simple. Just sign in to [Cloud9](http://c9.io) using your GitHub account (click the little green [Octocat](http://octodex.github.com/) icon). Your dashboard should open, and you will see a list of `PROJECTS ON GITHUB` on the left. Select your project and click the green `CLONE TO EDIT` button.\n\nIf you're in a group, your GitHub repository won't show up in the list of GitHub projects, so you need to click the plus-sign button next to `MY PROJECTS` on the left, and select `Clone From URL`. Then (in another browser tab) go to the homepage of your team's repository, and copy the URL next to where it says `Read+Write access` (it should look something like `git@github.com:sils-webinfo/SteampunkUnicorn.git` if `SteampunkUnicorn` were the name of your group). Go back to Cloud9, paste this URL in the `Source URL` field, and click the green `CHECKOUT` button. Cloud9 should start cloning your project. (Sometimes it flakes out; if it does just try again.)\n\n## Modifying the example code\n\nThere are only three places where the example service needs to be modified to implement your own service:\n\n1. [`app.js`](https://github.com/sils-webinfo/election/blob/master/app.js) contains all the logic for handling HTTP requests. You may just need to modify the examples in this file, or you may need to add additional request handlers by copying, pasting, and modifying these examples. The only parts you should *need* to change are marked with with `TODO` comments. In particular, make sure you edit the value of the `USER_OR_GROUP_NAME` variable at the top of this file to match your GitHub user name (if you're working alone) or your group name:\n\n    ```javascript\n    var USER_OR_GROUP_NAME = ''; // TODO: Insert GitHub username or group name.\n    ```\n\n1. The [`views`](https://github.com/sils-webinfo/election/tree/master/views) directory contains all the EJS ([Embedded JavaScript](http://embeddedjs.com/)) templates for the service. You will need to create new templates suitable for your application, using these examples as models. The templates should include the metadata describing your application flow and data.\n\n1. Finally, you need to edit [`package.json`](https://github.com/sils-webinfo/election/blob/master/package.json) and change the value of the `name` property to whatever you named your project.\n\n## Testing your code\n\nTo run your project, simply open `app.js` and click the `Run` button at the top of the screen (it looks like a green play button). You should see a message like this in the console:\n\n```\nRunning Node Process\nYour code is running at 'http://election.rybesh.c9.io'.\nImportant: use 'process.env.PORT' as the port and 'process.env.IP' as the host in your scripts!\n```\n\nClicking on the URL (in my case, `http://election.rybesh.c9.io` since `rybesh` is my GitHub/Cloud9 username) should open a new browser tab or window to your web app.\n\nIf you get an error message, it's probably because you forgot to set `USER_OR_GROUP_NAME` (see above) or due to a syntax error somewhere in `app.js` (look for red `X`s along the left margin of the editor when you open `app.js`). \n\n## Troubleshooting\n\nRunning your app in Cloud9 and looking at the console output should help you troubleshoot basic problems. You can add logging messages to `app.js` like this:\n\n```javascript\nconsole.log(\"Calculating grobble vectors…\");\n```\n\nThen you when you run your app in Cloud9, you should see the text `Calculating grobble vectors…` in your console when that code is executed. Adding lots of console logging messages like this can help you understand when various parts of the program are running. You can also print out variables to see what their values are:\n\n```javascript\n// Get the item ID from the URI.\nvar item_id = req.params.id;\nconsole.log(\"the item id is: \", item_id);\n```\n\nYou may also want to verify that data is being created and updated in your database correctly. You can do this by going to [the admin tools for our shared database server](http://sils-webinfo.iriscouch.com/_utils/). Find your database in the list (it is named whatever you set `USER_OR_GROUP_NAME` to in `app.js`), and click it. You should see a list of all the \"documents\" (objects) in your database. Clicking on a document ID will show its details (properties and values).\n\n## Deploying to Heroku\n\nWhen you've got your app running how you want it, and you're ready to turn things in, it's time to deploy to [Heroku](http://www.heroku.com/). Heroku is a free (for us) cloud hosting platform. It will enable your app to run longer than it can in the Cloud9 debugger.\n\nFirst, [sign up](https://api.heroku.com/signup) for Heroku. Then, follow [these instructions](https://docs.c9.io/deploying_to_heroku.html) to deploy your app. Don't worry about the `package.json` and `Procfile` files: those already exist, and you shouldn't have to change them except to change the project name in `package.json` (see above).\n\n"]],"start1":0,"start2":0,"length1":0,"length2":6110}]],"length":6110}
{"contributors":[],"silentsave":false,"ts":1366859219783,"patch":[[{"diffs":[[-1,"# An example web information service\n\nThis is an example application intended to be used as a starting point for the final project in [INLS 490-186 Web Information Organization](http://aeshin.org/teaching/inls-490-186/2013/sp/).\n\n## Forking this repository\n\nYou will want to start by [forking](http://help.github.com/fork-a-repo/) this repository so you have your own copy to modify. If you decide to work in a group, I will put a copy of the code in your shared repository. (While it's possible to collaborate with your group by pushing and pulling commits across your two or three separate forks, doing so requires somewhat advanced knowledge of Git and thus isn't expected for this assignment.)\n\nIf you're working alone, please **rename your GitHub repository** to something more suitable for your service. You can do this by clicking on the `Settings` button in the top right of your repository's page on GitHub. A one-word, no-spaces name is best. (If you're working in a group the repository will be named after your group).\n\n## Cloning your project in Cloud9\n\nIf you're working alone, and you've successfully forked the repository to your own GitHub account, then cloning your project into Cloud9 is simple. Just sign in to [Cloud9](http://c9.io) using your GitHub account (click the little g"],[1,"\r\n\r\n#bronzAgeComics\r\n\r\n##Attribute Values\r\n\r\n**ID attributes**\r\n\r\n*content*\r\n>Applied to a SECTION tag. All (non-header) content on the page.\r\n\r\n*titles*\r\n>Applied to a SECTION tag. A list of titles.\r\n\r\n\r\n**Class attributes**\r\n\r\n*search*\r\n>Applied to a FORM tag. A templated query link to search for titles matching specified criterea. The element must be set to FORM.method=\"get\".\r\n\r\n*new-title*\r\n>Applied to a FORM tag. A non-idempotent update link that posts a new title with the specified metadata. The element must be set to FORM.method=\"post\".\r\n\r\n*update-title*\r\n>Applied to a FORM tag. A non-idempotent update link that updates an existing title with the specified metadata. The element must be set to FORM.method=\"post\".\r\n\r\n*all*\r\n>Applied to a UL tag. A list rep"],[0,"re"],[1,"s"],[0,"en"],[-1," [Octocat](http://octodex.github.com/) ic"],[1,"tati"],[0,"on"],[-1,")"],[0,". "],[-1,"Your dashboard should open, and you will see a list of `PROJECTS ON GITHUB` on the left. Select your project and click the green `CLONE TO EDIT` button.\n\nIf you're in a group, your GitHub repository won't show up in the list of GitHub projects, so you need to click the plus-sign button next to `MY PROJECTS` on the left, and select `Clone From URL`. Then (in another browser tab) go to the homepage of your team's repository, and copy the URL next to where it says `Read+Write access` (it should look something like `git@github.com:sils-webinfo/SteampunkUnicorn.git` if `SteampunkUnicorn` were the name of your group). Go back to Cloud9, paste this URL in the `Source URL` field, and click the green `CHECKOUT` button. Cloud9 should start cloning your project. (Sometimes it flakes out; if it does just try again.)\n\n## Modifying the example code\n\nThere are only three places where the example service needs to be modified to implement your own service:\n\n1. [`app.js`](https://github.com/sils-webinfo/election/blob/master/app.js) contains all the logic for handling HTTP requests. You may just need to modify the examples in this file, or you may need to add additional request handlers by copying, pasting, and modifying these examples. The only parts you should *need* to change are marked with with `TODO` comments. In particular, make sure you edit the value of the `USER_OR_GROUP_NAME` variable at the top of this file to match your GitHub user name (if you're working alone) or your group name:\n\n    ```javascript\n    var USER_OR_GROUP_NAME = ''; // TODO: Insert GitHub username or group name.\n    ```\n\n1. The [`views`](https://github.com/sils-webinfo/election/tree/master/views) directory contains all the EJS ([Embedded JavaScript](http://embeddedjs.com/)) templates for the service. You will need to create new templates suitable for your application, using these examples as models. The templates should include the metadata describing your application flow and data.\n\n1. Finally, you need to edit [`package.json`](https://github.com/sils-webinfo/election/blob/master/package.json) and change the value of the `name` property to whatever you named your project.\n\n## Testing your code\n\nTo run your project, simply open `app.js` and click the `Run` button at the top of the screen (it looks like a green play button). You should see a message like this in the console:\n\n```\nRunning Node Process\nYour code is running at 'http://election.rybesh.c9.io'.\nImportant: use 'process.env.PORT' as the port and 'process.env.IP' as the host in your scripts!\n```\n\nClicking on the URL (in my case, `http://election.rybesh.c9.io` since `rybesh` is my GitHub/Cloud9 username) should open a new browser tab or window to your web app.\n\nIf you get an error message, it's probably because you forgot to set `USER_OR_GROUP_NAME` (see above) or due to a syntax error somewhere in `app.js` (look for red `X`s along the left margin of the editor when you open `app.js`). \n\n## Troubleshooting\n\nRunning your app in Cloud9 and looking at the console output should help you troubleshoot basic problems. You can add logging messages to `app.js` like this:\n\n```javascript\nconsole.log(\"Calculating grobble vectors…\");\n```\n\nThen you when you run your app in Cloud9, you should see the text `Calculating grobble vectors…` in your console when that code is executed. Adding lots of console logging messages like this can help you understand when various parts of the program are running. You can also print out variables to see what their values are:\n\n```javascript\n// Get the item ID from the URI.\nvar item_id = req.params.id;\nconsole.log(\"the item id is: \", item_id);\n```\n\nYou may also want to verify that data is being created and updated in your database correctly. You can do this by going to [the admin tools for our shared database server](http://sils-webinfo.iriscouch.com/_utils/). Find your database in the list (it is named whatever you set `USER_OR_GROUP_NAME` to in `app.js`), and click it. You should see a list of all the \"documents\" (objects) in your database. Clicking on a document ID will show its details (properties and values).\n\n## Deploying to Heroku\n\nWhen you've got your app running how you want it, and you're ready to turn things in, it's time to deploy to [Heroku](http://www.heroku.com/). Heroku is a free (for us) cloud hosting platform. It will enable your app to run longer than it can in the Cloud9 debugger.\n\nFirst, [sign up](https://api.heroku.com/signup) for Heroku. Then, follow [these instructions](https://docs.c9.io/deploying_to_heroku.html) to deploy your app. Don't worry about the `package.json` and `Procfile` files: those already exist, and you shouldn't have to change them except to change the project name in `package.json` (see above).\n"],[1,"When this element is a descendent of SECTION.id=\"titles\", it may contain one or more LI.class=\"title\" descendent elements.\r\n\r\n*matching*\r\n>Applied to a UL tag. A representation of a list of titles matching some search criteria. When this element is a descendent of SECTION.id=\"titles\", it may contain one or more LI.class=\"title\" descendent elements. \r\n\r\n*title*\r\n>When applied to a LI tag, a representation of a listed title. Must contain only one SPAN.class=\"titles-name\" descendent element and one SPAN.class=\"username\" descendent element.\r\n\r\n>When applied to a SECTION tag, a representation of a titles. Must contain H2.class=\"title-name\", H3.class=\"username\", SPAN.class=\"description\", SPAN.class=\"trail-type\", SPAN.class=\"trail-region\", SPAN.class=\"trail-length\", SPAN.class=\"trail-difficulty\", and UL.class=\"coordinates\" descendent elements. \r\n\r\n*title-name*\r\n>Applied to a SPAN tag or H2 tag. Contains the name of a title.\r\n\r\n*username*\r\n>Applied to a SPAN tag or H3 tag. Contains the name of a user.\r\n\r\n*description*\r\n>Applied to a SPAN tag. Contains a text description of a title.\r\n\r\n*trail-region*\r\n>Applied to a SPAN tag. Contains the region of a route.\r\n\r\n*trail-difficulty*\r\n>Applied to a SPAN tag. Contains the difficulty of a route.\r\n\r\n*trail-length*\r\n>Applied to a SPAN tag. Contains the length of a route.\r\n\r\n*trail-type*\r\n>Applied to a SPAN tag. Contains the trail type of a route.\r\n\r\n*coordinates*\r\n>Applied to a UL tag. A list representation. When this element is a descendent of SECTION.id=\"route\", it may contain one or more LI.class=\"route-point\" descendent elements.\r\n\r\n*route-point*\r\n>Applied to a LI tag. A representation of one point in space on a particular route.Must contain a pair of SPAN.class=\"latitude\" and SPAN.class=\"longitude\" descendent elements.\r\n\r\n*latitude*\r\n>Applied to a SPAN tag. Represents the latitude of a particular point on a route.\r\n\r\n*longitude*\r\n>Applied to a SPAN tag. Represents the longitude of a particular point on a route.\r\n\r\n\r\n**Name attributes**\r\n\r\n*match-text*\r\n>Applied to an INPUT[text] element. The user wants to see only titles that contain this text.\r\n\r\n*trail-region*\r\n>Applied to an INPUT[checkbox] element. The user wants to see routes that are in this region.\r\n\r\n*trail-difficulty*\r\n>When applied to an INPUT[checkbox] element and contained within a FORM.class=\"search\" element, the user wants to see routes that have this difficulty level.\r\n\r\n>When applied to an INPUT[radio] element and contained within a FORM.class=\"new-route\" element, the difficulty of the new route.\r\n\r\n*trail-length*\r\n>Applied to an INPUT[checkbox] element. The user wants to see routes that have this length.\r\n\r\n*trail-type*\r\n>Applied to an INPUT[checkbox] element. When contained within FORM.class=\"search\" element, the user wants to see routes that are of this trail type.\r\n\r\n>When contained within a FORM.class=\"new-route\" element, the trail type of the route.\r\n\r\n*route-name*\r\n>Applied to an INPUT[text] element. The name of the route.\r\n\r\n*route-description*\r\n>Applied to a TEXTAREA element. The description of the route.\r\n\r\n*coordinates*\r\n>Applied to a TEXTAREA element. The set of latitude/longitude points representing a route.\r\n\r\n\r\n**Rel attributes**\r\n\r\n*index*\r\n>Applied to an A tag. A reference to the starting URI for the application.\r\n\r\n*title*\r\n>Applied to an A tag. A reference to a particular title representation.\r"],[0,"\n"]],"start1":0,"start2":0,"length1":6110,"length2":4161}]],"length":4161,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366893607375,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"*username*\r\n>Applied to a SPAN tag or H3 tag. Contains the name of a user.\r\n"],[0,"\r\n*d"]],"start1":1714,"start2":1714,"length1":84,"length2":8}]],"length":4085,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366932457522,"patch":[[{"diffs":[[0,"cation.\r\n\r\n*"],[-1,"title"],[1,"stylesheet"],[0,"*\r\n>Applied "]],"start1":3992,"start2":3992,"length1":29,"length2":34},{"diffs":[[0," to "],[-1,"a particular title representation"],[1,"the CSS stylesheet"],[0,".\r\n"]],"start1":4050,"start2":4050,"length1":40,"length2":25}]],"length":4075,"saved":false}
{"ts":1366938703283,"patch":[[{"diffs":[[0,"s**\r\n\r\n*"],[-1,"content"],[1,"banner"],[0,"*\r\n>Appl"]],"start1":59,"start2":59,"length1":23,"length2":22},{"diffs":[[0,"pplied to a "],[-1,"SECTION"],[1,"DIV"],[0," tag. All (n"]],"start1":78,"start2":78,"length1":31,"length2":27},{"diffs":[[0,"\n\r\n*"],[-1,"titles*\r\n>Applied to a SECTION tag. A list of titles.\r\n"],[1,"main*\r\n>Applied to a DIV tag. A list of titles.\r\n\r\n*menu*\r\n>Applied to a SECTION tag. A list of titles.\r\n\r\n*content*\r\n>Applied to a SECTION tag. A list of titles.\r\n\r\n*primary*\r\n>Applied to a DIV tag. A list of titles."],[0,"\r\n\r\n"]],"start1":137,"start2":137,"length1":63,"length2":225}]],"length":4232,"saved":false}
{"ts":1366939144825,"patch":[[{"diffs":[[0,"ag. "],[-1,"All (non-header) content on"],[1,"Displays the title of"],[0," the "],[1,"current "],[0,"page"]],"start1":95,"start2":95,"length1":40,"length2":42},{"diffs":[[0,"a DIV tag. A"],[-1," list of titles"],[1,"ll non-head content below the title banner"],[0,".\r\n\r\n*menu*\r"]],"start1":162,"start2":162,"length1":39,"length2":66},{"diffs":[[0,"t of titles."],[1," It may contain one or more UL items."],[0,"\r\n\r\n*content"]],"start1":261,"start2":261,"length1":24,"length2":61},{"diffs":[[0,". A "],[-1,"list of titles.\r\n\r\n*primary*\r\n>Applied to a DIV tag. A list of titles"],[1,"container that displays the content of a page.\r\n\r\n*primary*\r\n>Applied to a DIV tag. Enables CSS styles to be applied to the SECTION.id=\"content\""],[0,".\r\n\r"]],"start1":350,"start2":350,"length1":77,"length2":152}]],"length":4373,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366946871128,"patch":[[{"diffs":[[0,"s**\r\n\r\n*"],[-1,"search"],[1,"PeriodicalSeries"],[0,"*\r\n>Appl"]],"start1":520,"start2":520,"length1":22,"length2":32},{"diffs":[[0,"\n\r\n*"],[-1,"new-titl"],[1,"ComicIssu"],[0,"e*\r\n"]],"start1":690,"start2":690,"length1":16,"length2":17},{"diffs":[[0,"\r\n\r\n"],[-1,"*update-title*\r\n>Applied to a FORM tag. A non-idempotent update link that updates an existing title with the specified metadata. The element must be set to FORM.method=\"post\".\r\n\r\n*all*\r\n>Applied to a UL tag. A list representation. When this element is a descendent of SECTION.id=\"titles\", it may contain one or more LI.class=\"title\" descendent elements.\r\n\r\n*matching*\r\n>Applied to a UL tag. A representation of a list of titles matching some search criteria. When this element is a descendent of SECTION.id=\"titles\", it may contain one or more LI.class=\"title\" descendent elements. \r\n\r\n*title*\r\n>When applied to a LI tag, a representation of a listed title. Must contain only one SPAN.class=\"titles-name\" descendent element and one SPAN.class=\"username\" descendent element.\r\n\r\n>When applied to a SECTION tag, a representation of a titles. Must contain H2.class=\"title-name\", H3.class=\"username\", SPAN.class=\"description\", SPAN.class=\"trail-type\", SPAN.class=\"trail-region\", SPAN.class=\"trail-length\", SPAN.class=\"trail-difficulty\", and UL.class=\"coordinates\" descendent elements. \r\n\r\n*title-name*\r\n>Applied to a SPAN tag or H2 tag. Contains the name of a title.\r\n\r\n\r\n*description*\r\n>Applied to a SPAN tag. Contains a text description of a title.\r\n\r\n*trail-region*\r\n>Applied to a SPAN tag. Contains the region of a route.\r\n\r\n*trail-difficulty*\r\n>Applied to a SPAN tag. Contains the difficulty of a route.\r\n\r\n*trail-length*\r\n>Applied to a SPAN tag. Contains the length of a route.\r\n\r\n*trail-type*\r\n>Applied to a SPAN tag. Contains the trail type of a route.\r\n\r\n*coordinates*\r\n>Applied to a UL tag. A list representation. When this element is a descendent of SECTION.id=\"route\", it may contain one or more LI.class=\"route-point\" descendent elements.\r\n\r\n*route-point*\r\n>Applied to a LI tag. A representation of one point in space on a particular route.Must contain a pair of SPAN.class=\"latitude\" and SPAN.class=\"longitude\" descendent elements.\r\n\r\n*latitude*\r\n>Applied to a SPAN tag. Represents the latitude of a particular point on a route.\r\n\r\n*longitude*\r\n>Applied to a SPAN tag. Represents the longitude of a particular point on a route."],[0,"\r\n\r\n"]],"start1":858,"start2":858,"length1":2144,"length2":8}]],"length":2248,"saved":false}
{"ts":1366947470441,"patch":[[{"diffs":[[0,"st\".\r\n\r\n"],[1,"*PeriodicalSeries*\r\n>Applied to a FORM tag. A templated query link to search for titles matching specified criterea. The element must be set to FORM.method=\"get\"."],[0,"\r\n"],[-1,""],[0,"\r\n\r\n**Na"]],"start1":854,"start2":854,"length1":18,"length2":180},{"diffs":[[0,"\n\r\n*"],[-1,"match-text"],[1,"writer"],[0,"*\r\n>"]],"start1":1050,"start2":1050,"length1":18,"length2":14},{"diffs":[[0,"\r\n\r\n"],[-1,"*trail-region*\r\n>Applied to an INPUT[checkbox] element. The user wants to see routes that are in this region.\r\n\r\n*trail-difficulty*\r\n>When applied to an INPUT[checkbox] element and contained within a FORM.class=\"search\" element, the user wants to see routes that have this difficulty level.\r\n\r\n>When applied to an INPUT[radio] element and contained within a FORM.class=\"new-route\" element, the difficulty of the new route.\r\n\r\n*trail-length*\r\n>Applied to an INPUT[checkbox] element. The user wants to see routes that have this length.\r\n\r\n*trail-type*\r\n>Applied to an INPUT[checkbox] element. When contained within FORM.class=\"search\" element, the user wants to see routes that are of this trail type.\r\n\r\n>When contained within a FORM.class=\"new-route\" element, the trail type of the route.\r\n\r\n*route-name*\r\n>Applied to an INPUT[text] element. The name of the route.\r\n\r\n*route-description*\r\n>Applied to a TEXTAREA element. The description of the route.\r\n\r\n*coordinates*\r\n>Applied to a TEXTAREA element. The set of latitude/longitude points representing a route.\r\n"],[0,"\r\n\r\n"]],"start1":1156,"start2":1156,"length1":1069,"length2":8}]],"length":1345,"saved":false}
